{"version":3,"sources":["components/Info.js","components/Search.js","components/List.js","components/NavLinks.js","components/ListCollapse.js","components/About.js","components/Encounter.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Info","props","activeMonster","className","name","size","type","subtype","alignment","armor_class","hit_points","hit_dice","speed","strength","dexterity","constitution","intelligence","wisdom","charisma","strength_save","dexterity_save","constitution_save","intelligence_save","wisdom_save","charisma_save","athletics","acrobatics","sleight_of_hand","stealth","arcana","history","investigation","nature","religion","animal_handling","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","damage_vulnerabilities","damage_resistances","damage_immunities","condition_immunities","senses","languages","challenge_rating","special_abilities","map","special","i","key","desc","actions","action","Fragment","reactions","reaction","legendary_actions","Search","placeholder","onChange","handleChange","List","monsterList","filter","d","toLowerCase","includes","value","to","onClick","handleClick","url","NavLinks","ListCollapse","Navbar","defaultExpanded","expand","Toggle","aria-controls","Brand","Collapse","id","Nav","About","href","Encounter","Main","state","matched","encounter","handleSearchChange","e","target","setState","prevState","handleMonsterClick","a","axios","data","localStorage","setItem","index","JSON","stringify","monster","Object","keys","k","handleEncounterClick","_id","getMonsters","results","this","path","component","render","exact","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.006504e1.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Info(props) {\n  return (\n    <>\n    {props.activeMonster && (\n      <div className='info-container'>\n        <h1 className='eaves'>{props.activeMonster.name}</h1>\n        <p className='scaly-i black-text'>{props.activeMonster.size}  {props.activeMonster.type} {props.activeMonster.subtype && (`(${props.activeMonster.subtype})`)}, {props.activeMonster.alignment}</p>\n        <div className='divider'></div>\n        <section>\n          <p className='scaly-b'>Armor Class <span className='scaly'>{props.activeMonster.armor_class}</span></p>\n          <p className='scaly-b'>Hit Points <span className='scaly'>{props.activeMonster.hit_points} ({props.activeMonster.hit_dice})</span></p>\n          <p className='scaly-b'>Speed <span className='scaly'>{props.activeMonster.speed}</span></p>\n        </section>\n        <div className='divider'></div>\n        <section className='stats'>\n          <div className='indiv-stat str scaly'>\n            <p className='scaly-b'>STR</p>\n            <p>{props.activeMonster.strength}</p>\n          </div>\n          <div className='indiv-stat scaly'>\n            <p className='scaly-b'>DEX</p>\n            <p>{props.activeMonster.dexterity}</p>\n          </div>\n          <div className='indiv-stat scaly'>\n            <p className='scaly-b'>CON</p>\n            <p>{props.activeMonster.constitution}</p>\n          </div>\n          <div className='indiv-stat scaly'>\n            <p className='scaly-b'>INT</p>\n            <p>{props.activeMonster.intelligence}</p>\n          </div>\n          <div className='indiv-stat scaly'>\n            <p className='scaly-b'>WIS</p>\n            <p>{props.activeMonster.wisdom}</p>\n          </div>\n          <div className='indiv-stat scaly'>\n            <p className='scaly-b'>CHA</p>\n            <p>{props.activeMonster.charisma}</p>\n          </div>\n        </section>\n        <div className='divider'></div>\n        <section>\n          {/*SAVING THROW CONDITIONAL*/}\n          {(props.activeMonster.strength_save ||\n             props.activeMonster.dexterity_save || props.activeMonster.constitution_save || props.activeMonster.intelligence_save || props.activeMonster.wisdom_save || props.activeMonster.charisma_save) && (\n          <p className='scaly'>\n            <span className='scaly-b'>Saving Throws</span> {props.activeMonster.strength_save && (`STR +${props.activeMonster.strength_save} `)} {props.activeMonster.dexterity_save && (`DEX +${props.activeMonster.dexterity_save} `)}\n            {props.activeMonster.constitution_save && (`CON +${props.activeMonster.constitution_save} `)}\n            {props.activeMonster.intelligence_save && (`INT +${props.activeMonster.intelligence_save} `)}\n            {props.activeMonster.wisdom_save && (`WIS +${props.activeMonster.wisdom_save} `)}\n            {props.activeMonster.charisma_save && (`CHA  +${props.activeMonster.charisma_save}`)}\n          </p>)}\n          {/* SKILLS DISPLAY CONDITIONAL*/}\n          {(props.activeMonster.athletics ||\n            props.activeMonster.acrobatics ||\n            props.activeMonster.sleight_of_hand ||\n            props.activeMonster.stealth ||\n            props.activeMonster.arcana ||\n            props.activeMonster.history ||\n            props.activeMonster.investigation ||\n            props.activeMonster.nature ||\n            props.activeMonster.religion ||\n            props.activeMonster.animal_handling ||\n            props.activeMonster.insight ||\n            props.activeMonster.medicine ||\n            props.activeMonster.perception ||\n            props.activeMonster.survival ||\n            props.activeMonster.deception ||\n            props.activeMonster.intimidation ||\n            props.activeMonster.performance ||\n            props.activeMonster.persuasion) && (\n          <p className='scaly'>\n            <span className='scaly-b'>Skills</span> {props.activeMonster.athletics && (`Athletics +${props.activeMonster.athletics} `)}\n            {props.activeMonster.acrobatics && (`Acrobatics +${props.activeMonster.acrobatics} `)}\n            {props.activeMonster.sleight_of_hand && (`Sleight of Hand +${props.activeMonster.sleight_of_hand} `)}\n            {props.activeMonster.stealth && (`Stealth +${props.activeMonster.stealth} `)}\n            {props.activeMonster.arcana && (`Arcana +${props.activeMonster.arcana} `)}\n            {props.activeMonster.history && (`History +${props.activeMonster.history} `)}\n            {props.activeMonster.investigation && (`Investigation +${props.activeMonster.investigation} `)}\n            {props.activeMonster.nature && (`Nature +${props.activeMonster.nature} `)}\n            {props.activeMonster.religion && (`Religion +${props.activeMonster.religion} `)}\n            {props.activeMonster.animal_handling && (`Animal Handling +${props.activeMonster.animal_handling} `)}\n            {props.activeMonster.insight && (`Insight +${props.activeMonster.insight} `)}\n            {props.activeMonster.medicine && (`Medicine +${props.activeMonster.medicine} `)}\n            {props.activeMonster.perception && (`Perception +${props.activeMonster.perception} `)}\n            {props.activeMonster.survival && (`Survival +${props.activeMonster.survival} `)}\n            {props.activeMonster.deception && (`Deception +${props.activeMonster.deception} `)}\n            {props.activeMonster.intimidation && (`Intimidation +${props.activeMonster.intimidation} `)}\n            {props.activeMonster.performance && (`Performance +${props.activeMonster.performance} `)}\n            {props.activeMonster.persuasion && (`Persuasion +${props.activeMonster.persuasion} `)}\n          </p>)}\n          {/* DAMAGE VULNERABILITIES (CONDITIONAL)*/}\n          {props.activeMonster.damage_vulnerabilities && (\n            <p className='scaly'>\n            <span className='scaly-b'>Damage Vulnerabilities</span> {props.activeMonster.damage_vulnerabilities}\n            </p>)}\n          {/* DAMAGE RESISTANCES (CONDITIONAL)*/}\n          {props.activeMonster.damage_resistances && (\n            <p className='scaly'>\n            <span className='scaly-b'>Damage Resistances</span> {props.activeMonster.damage_resistances}\n            </p>)}\n          {/* DAMAGE IMMUNITIES (CONDITIONAL)*/}\n          {props.activeMonster.damage_immunities && (\n            <p className='scaly'>\n            <span className='scaly-b'>Damage Immunities</span> {props.activeMonster.damage_immunities}\n            </p>)}\n          {/* CONDITION IMMUNITIES (CONDITIONAL)*/}\n          {props.activeMonster.condition_immunities && (\n            <p className='scaly'>\n            <span className='scaly-b'>Condition Immunities</span> {props.activeMonster.condition_immunities}\n            </p>)}\n          {/* SENSES (CONDITIONAL)*/}\n          {props.activeMonster.senses && (\n            <p className='scaly'>\n            <span className='scaly-b'>Senses</span> {props.activeMonster.senses}\n            </p>)}\n          {/* LANGUAGES (CONDITIONAL)*/}\n          {props.activeMonster.languages && (\n            <p className='scaly'>\n            <span className='scaly-b'>Languages</span> {props.activeMonster.languages}\n            </p>)}\n          {/* CHALLENGE RATING (CONDITIONAL)*/}\n          {props.activeMonster.challenge_rating && (\n            <p className='scaly'>\n            <span className='scaly-b'>Challenge Rating</span> {props.activeMonster.challenge_rating}\n            </p>)}\n        </section>\n        <div className='divider'></div>\n        <section>\n          {props.activeMonster.special_abilities && (props.activeMonster.special_abilities.map( (special, i) => (\n            <p key={i} className='scaly black-text'><span className='scaly-b black-text'>{special.name}</span> {special.desc}</p>\n          )))}\n        </section>\n        {/* ACTIONS ===========================*/}\n        <section>\n          <h2 className='scaly action'>Actions</h2>\n          {props.activeMonster.actions &&\n            (props.activeMonster.actions.map( (action, i) => (\n            <React.Fragment key={i}>\n              <p className='scaly black-text'><span className='scaly-b black-text'>{action.name}</span> {action.desc}</p>\n            </React.Fragment>\n          )))}\n        </section>\n        {/* REACTIONS =========== CONDITIONAL*/}\n        {props.activeMonster.reactions && (\n        <section>\n          <h2 className='scaly action'>Reactions</h2>\n            {props.activeMonster.reactions.map( (reaction, i) => (\n            <>\n              <p key={i} className='scaly black-text'><span className='scaly-b black-text'>{reaction.name}</span> {reaction.desc}</p>\n            </>\n          ))}\n        </section>)}\n        {/* LEGENDARY ACTIONS =========== CONDITIONAL*/}\n        {props.activeMonster.legendary_actions && (\n        <section>\n          <h2 className='scaly action'>Legendary Actions</h2>\n          <p className='scaly black-text'>The {props.activeMonster.type} can take 3 legendary actions, choosing from the options below. Only one legendary action option can be used at a time and only at the end of another creature's turn. The {props.activeMonster.type} regains spent legendary actions at the start of its turn.</p>\n            {props.activeMonster.legendary_actions.map( (action, i) => (\n            <>\n              <p key={i} className='scaly black-text'><span className='scaly-b black-text'>{action.name}</span> {action.desc}</p>\n            </>\n          ))}\n        </section>)}\n      </div>\n    )}\n    </>\n  )\n}\n\nexport default Info\n","import React from 'react'\n\nfunction Search(props) {\n  return (\n    <form>\n        <input\n          type='text'\n          placeholder='Search'\n          className='eaves search'\n          onChange={props.handleChange}\n          />\n      </form>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction List(props) {\n  let matched = props.monsterList.filter((d,i) => {\n    return d.name.toLowerCase().includes(props.value.toLowerCase())\n  })\n  let monsterList = matched.map((d, i) => {\n      return <li key={i} ><Link to='/'><button className= 'eaves monster-button' onClick={() => props.handleClick(d.url)}>{d.name}</button></Link></li>\n    })\n  return(\n    <React.Fragment>\n      <div className= 'monsterList eaves'>\n        <div>{monsterList}</div>\n      </div>\n    </React.Fragment>\n  )}\n\nexport default List\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction NavLinks() {\n  return (\n    <div className='zatanna pages-nav'>\n      <Link className='nav-h4' to='/about'>About</Link>\n      <Link className='nav-h4' to='/encounter'>Encounter Builder (alpha)</Link>\n    </div>\n  )\n}\n\nexport default NavLinks\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport Search from './Search'\nimport List from './List'\nimport NavLinks from './NavLinks'\n\nfunction ListCollapse(props) {\n  return (\n  <>\n    <Navbar defaultExpanded expand=\"md\">\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Brand className='nodesto title'>Dungeons & Dragons Monster Reference</Navbar.Brand>\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav>\n          <NavLinks />\n          <Search\n            handleChange={props.handleChange}/>\n          <List\n            handleClick={props.handleClick}\n            monsterList={props.monsterList}\n            value={props.value}/>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </>\n  )\n}\n\nexport default ListCollapse\n","import React from 'react'\n\nfunction About() {\n  return (\n    <div className='about'>\n      <h1 className='eaves'>About the Project</h1>\n      <p className='zatanna'>This is a lightweight Monster Manual for use with Dungeons & Dragons 5th Edition. All content is courtesy of Wizards of the Coast under terms of their <a className='inline-link' href='https://dnd.wizards.com/articles/features/systems-reference-document-srd'>SRD V5.1</a></p>\n      <h1 className='eaves'>About the Developer</h1>\n      <p className='zatanna'> My name is Andrew, and I made this app. I am a web developer and D&D fan that thought that building out a Monster-Manual-Lite would be fun, and potentially useful to some people. It's a work-in-constant-progress, so feel free to <a className='inline-link' href='mailto:andrew.hollingworth@gmail.com'>reach out</a> with suggestions. You can also <a className='inline-link' href='https://github.com/andrew-hollingworth/DnD_Monster_Reference'>check this project out on Github!</a></p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\n\nfunction Encounter() {\n  return (\n    <h1>Encounter</h1>\n  )\n}\n\nexport default Encounter\n","import React from 'react'\nimport axios from 'axios'\nimport Info from './Info'\nimport ListCollapse from './ListCollapse'\nimport About from './About'\nimport Encounter from './Encounter'\nimport { Switch, Route } from 'react-router-dom'\n\nclass Main extends React.Component {\n  state = {\n    activeMonster: null,\n    url: 'http://www.dnd5eapi.co/api/monsters',\n    monsterList: [],\n    value: '',\n    matched: [],\n    encounter: [],\n  }\n\n// SEARCH FILTER\n  handleSearchChange = (e) => {\n    let value = e.target.value\n    this.setState(prevState => ({\n      value\n    }))\n  }\n\n// MONSTER SELECTION FROM LIST/NEW API CALL\n  handleMonsterClick = async (url) => {\n    let data  = await axios (url)\n    localStorage.setItem(data.data.index, JSON.stringify(data))\n    let monster = {}\n    let keys = Object.keys(data.data)\n    keys.map( (k) => {\n        if (data.data[k]) { monster[k] = data.data[k]}\n    })\n    this.setState(prevState => ({\n      activeMonster: monster\n    }))\n  }\n\n  handleEncounterClick = (e) => {\n    localStorage.setItem(this.state.activeMonster._id, JSON.stringify(this.state.activeMonster))\n    this.setState(prevState => ({\n      encounter: [...prevState, this.state.activeMonster]\n    }))\n  }\n\n// MONSTER LIST API CALL\n  getMonsters = async () => {\n    let data  = await axios (this.state.url)\n    this.setState(prevState => ({\n    monsterList: data.data.results\n    }))\n  }\n\n  componentDidMount() {\n    this.getMonsters()\n  }\n\n  render () {\n    return (\n    <React.Fragment>\n      <div className='container'>\n         <ListCollapse\n           handleChange={this.handleSearchChange}\n           handleClick={this.handleMonsterClick}\n           monsterList={this.state.monsterList}\n           value={this.state.value} />\n        <Switch>\n          <Route path='/about' component={ About }/>\n          <Route path='/encounter' render={() =>\n            <Encounter {...this.state.encounter}\n              encounter={this.state.encounter}/>}/>\n          <Route exact path='/'\n              render={() =>\n                <Info {...this.state.activeMonster}\n                  activeMonster={this.state.activeMonster}/>}/>\n        </Switch>\n      </div>\n    </React.Fragment>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react';\nimport './App.css';\nimport './dist/hamburgers.css'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <main className='background'>\n      <Main />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}